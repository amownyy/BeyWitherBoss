plugins {
    id 'java'
    id("com.github.johnrengelman.shadow") version "7.1.2"
}

group = 'works.emregumus'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "sonatype-oss-snapshots1"
        url = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
    }
    maven {
        name = "jitpack-repo"
        url 'https://jitpack.io/'
    }
    maven {
        name = "placeholderapi-repo"
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    maven {
        name = "lumine-repo"
        url = 'https://mvn.lumine.io/repository/maven-public/'
    }
    maven {
        name = "krypton-repo"
        url = 'https://repo.kryptonmc.org/releases'
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.19.4-R0.1-SNAPSHOT"
    compileOnly 'com.github.LoneDev6:API-ItemsAdder:3.4.1e'
    compileOnly "me.clip:placeholderapi:2.11.3"
    compileOnly "io.lumine:Mythic-Dist:5.2.1"
    compileOnly 'me.neznamy:tab-api:4.0.0'
    implementation "net.kyori:adventure-api:4.14.0"
    implementation "net.kyori:adventure-text-minimessage:4.14.0"
    implementation "net.kyori:adventure-platform-bukkit:4.3.0"
}

shadowJar {
    relocate("net.kyori", "works.emregumus.beywitherboss.libs.net.kyori")
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
